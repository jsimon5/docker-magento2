version: '2'

services:

  nginx:
      image: imaginationmedia/magento2:nginx
#      build:
#          context: ./images/nginx/
      ports:
          - 80:80
      volumes_from:
            - appdata
      depends_on:
          - db
          - phpfpm
      links:
          - db
          - phpfpm
      networks:
          - <project_name>-network

  phpfpm:
      image: imaginationmedia/magento2:php7.1-fpm
#      build:
#          context: ./images/fpm/
      ports:
          - 9000:9000
      environment:
          XDEBUG_CONFIG: "remote_host=<project_url>"
          PHP_IDE_CONFIG: "serverName=Docker"
      volumes_from:
            - appdata
      depends_on:
          - db
      links:
          - db
      environment:
          - "DB_HOST=db"
          - "MYSQL_DATABASE=magento"
      networks:
          - <project_name>-network

  db:
      image: mariadb
      ports:
          - 3300:3306
      environment:
          - MYSQL_ROOT_PASSWORD=root
          - MYSQL_DATABASE=magento
          - MYSQL_USER=magento
          - MYSQL_PASSWORD=magento
      volumes:
          - dbdata:/var/lib/mysql
      networks:
          - <project_name>-network

  redis:
      image: redis
      ports:
          - 6379
      networks:
          - <project_name>-network

  redis-session:
      image: redis
      ports:
          - 6379
      networks:
          - <project_name>-network

  phpmyadmin:
      image: phpmyadmin/phpmyadmin
      environment:
          - PMA_HOST=db
          - PMA_USER=root
          - PMA_PASSWORD=root
          - MYSQL_ROOT_PASSWORD=root
      ports:
          - 8088:80
      networks:
          - <project_name>-network

  mailhog:
      image: mailhog/mailhog
      ports:
          - 1025:1025
          - 8025:8025
      networks:
          - <project_name>-network

  appdata:
      image: tianon/true
      volumes:
          - ./src:/var/www/html
          - ~/.composer:/var/www/.composer
          - ~/.npm:/var/www/.npm
          - ~/.nvm:/var/www/.nvm

networks:
  <project_name>-network:
      driver: bridge

volumes:
  dbdata:
      driver: local
